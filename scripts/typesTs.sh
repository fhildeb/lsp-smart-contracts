#!/usr/bin/env bash

# This script will gather `types/` files from all pkgs & aggregate them into 1 `types/index.ts` file
# This script runs automatically after each `npm run build`

# output file
outputFileType="./types/index.ts"

# create file if not exists
if [ ! -f "$outputFileType" ]; then
  mkdir ./types
  echo "" >> $outputFileType
fi

# file headers
echo -e "/* File generated by scripts/typesTs.sh. Do not edit manually. */\n/* tslint:disable */\n/* eslint-disable */\n" > $outputFileType

# Helper function to loop through a directory and add each ts file in the outputFileType
# Parameter:
# 1) path to directory
# 2) type of path (contract or factory)
# 3) depth to search in the directory
# Return:
# nothing, output is in the outputFileType
loop_through () {
  local searchPath="$1"
  local exportType="$2"
  local noDepth="$3"
  # Check if the given path is a directory
  if [ -d "$searchPath" ]; then
    # wether to just search in the given directory ...
    if [ "$noDepth" = "true" ]; then
      cmd=$(find "$searchPath" -type f -regex ".*ts$" ! -regex ".*index\.ts" ! -regex ".*common\.ts" ! -regex ".*hardhat\.d\.ts" -maxdepth 1)
    # ... or in all subdirectories
    else
      cmd=$(find "$searchPath" -type f -regex ".*ts$" ! -regex ".*index\.ts" ! -regex ".*common\.ts" ! -regex ".*hardhat\.d\.ts")
    fi
    # Loop through all .ts files in the directory & sub-directories
    for tsFile in $cmd; do
      # replace ./ by ../
      itemPath=${tsFile/.\//../}
      # remove .ts extention
      pathNoExt=${itemPath/.ts/}
      # module name only
      moduleName=$(basename $pathNoExt)
      echo "🔁 Processing '${pathNoExt}'"
      if [ "$exportType" = "factory" ]; then
        echo -e "export { ${moduleName} } from \"${pathNoExt}\";" >> $outputFileType
      else
        echo -e "export type { ${moduleName} } from \"${pathNoExt}\";" >> $outputFileType
      fi
    done
  fi
}

# integration-tests folder
testFolder="./integration-tests"
if [[ -d "${testFolder}/types/contracts" && -d "${testFolder}/types/factories/contracts" ]]; then
  loop_through "$testFolder/types/contracts" "contract" "false"
  loop_through "$testFolder/types/factories/contracts" "factory" "false"
fi

# For all folders in packages/ except lsp-utils
for dir in $(find ./packages -type d -maxdepth 1 ! -regex '.*lsp-utils.*'); do
  # if 'types' folder doesn't exists, continue
  if [ ! -d "${dir}/types" ]; then 
    echo "📂❌ Directory ${dir} has no types. skipping"
    continue 
  fi
  # if 'types/contracts' folder exists, process it
  if [ -d "${dir}/types/contracts" ]; then
    echo "📂 Processing '${dir}' 📑"
    loop_through "$dir/types/contracts" "contract" "false"
  # 'types' folder exists, but no 'contracts' folder in it
  # process the root folder (depth 1)
  else
    echo "📂 No 'contracts' directory in ${dir}/types. Processing root."
    loop_through "$dir/types" "contract" "true"
  fi
  
  # if 'types/factories/contracts' folder exists, process it
  if [ -d "${dir}/types/factories/contracts" ]; then
    echo "📂 Processing '${dir}' 🏭"
    loop_through "$dir/types/factories/contracts" "factory" "false"
  # 'types' folder exists, but no 'contracts' folder in it
  # process the root folder (depth 1)
  else
    echo "📂 No 'contracts' directory in ${dir}/types/factories. Processing root."
    loop_through "$dir/types/factories" "contract" "true"
  fi
done

